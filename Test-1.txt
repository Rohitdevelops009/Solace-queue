@Test
public void testForLoopInExecuteQuery() {
    // Arrange
    QueryTab queryTab = new QueryTab();
    queryTab.setCacheName("test-cache");

    // Mock NamedCache and ContinuousQueryCache
    NamedCache namedCache = mock(NamedCache.class);
    ContinuousQueryCache queryResults = mock(ContinuousQueryCache.class);

    // Mock static methods
    PowerMockito.mockStatic(CacheFactory.class);
    PowerMockito.mockStatic(QueryHelper.class);

    // Define mock behavior for keySet
    Set<Object> mockKeys = new HashSet<>();
    mockKeys.add("key1");
    mockKeys.add("key2");
    mockKeys.add("key3");

    when(CacheFactory.getCache("test-cache")).thenReturn(namedCache);
    when(queryResults.keySet()).thenReturn(mockKeys);

    // Act
    Object result = queryTab.executeQuery("mock-query");

    // Assert
    assertNotNull(result);
    assertTrue(result instanceof List);

    List<?> cacheKeyList = (List<?>) result;
    assertEquals(3, cacheKeyList.size()); // Ensure all keys are added
    assertTrue(cacheKeyList.contains("key1"));
    assertTrue(cacheKeyList.contains("key2"));
    assertTrue(cacheKeyList.contains("key3"));

    // Verify interactions
    PowerMockito.verifyStatic(CacheFactory.class);
    CacheFactory.getCache("test-cache");

    // Verify ContinuousQueryCache was used correctly
    verify(queryResults).keySet();
}